export const validateDNI = (dni: string): { isValid: boolean; error?: string } => {
  const cleanDNI = dni.replace(/\D/g, '')

  if (!cleanDNI) {
    return { isValid: false, error: 'DNI es requerido' }
  }

  if (cleanDNI.length < 7 || cleanDNI.length > 8) {
    return { isValid: false, error: 'DNI debe tener entre 7 y 8 dígitos' }
  }

  return { isValid: true }
}

export const validateLoanTrack = (loanTrack: string): { isValid: boolean; error?: string } => {
  const cleanTrack = loanTrack.trim().toUpperCase()

  if (!cleanTrack) {
    return { isValid: false, error: 'Código de seguimiento es requerido' }
  }

  // Support multiple formats generated by the backend
  const loanTrackPatterns = [
    /^CREDITO-\d{4}-\d{5}$/, // Current backend format: CREDITO-2025-00009
    /^LN-\d{4}-\d{4}$/,      // Legacy format: LN-2025-0001
    /^LOAN-\d{4}-\d{3}$/     // API documentation format: LOAN-2024-001
  ]

  const isValidFormat = loanTrackPatterns.some(pattern => pattern.test(cleanTrack))

  if (!isValidFormat) {
    return {
      isValid: false,
      error: 'Formato inválido. Use formatos como: CREDITO-2025-00009, LN-2025-0001, o LOAN-2024-001'
    }
  }

  return { isValid: true }
}

export const validateQueryForm = (dni: string, loanTrack: string) => {
  const dniValidation = validateDNI(dni)
  const trackValidation = validateLoanTrack(loanTrack)

  if (!dniValidation.isValid) {
    return { isValid: false, error: dniValidation.error }
  }

  if (!trackValidation.isValid) {
    return { isValid: false, error: trackValidation.error }
  }

  return { isValid: true }
}