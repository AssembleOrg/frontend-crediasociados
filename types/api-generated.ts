/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["AppController_getHello"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** User login */
        post: operations["AuthController_login"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/refresh": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Actualizar token de acceso */
        post: operations["AuthController_refresh"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Cierre de sesión */
        post: operations["AuthController_logout"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all users with pagination */
        get: operations["UsersController_findAll"];
        put?: never;
        /** Create a new user */
        post: operations["UsersController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a user by ID */
        get: operations["UsersController_findOne"];
        put?: never;
        post?: never;
        /** Delete a user (soft delete) */
        delete: operations["UsersController_remove"];
        options?: never;
        head?: never;
        /** Update a user */
        patch: operations["UsersController_update"];
        trace?: never;
    };
    "/api/v1/users/{id}/created-users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get users created by a specific user */
        get: operations["UsersController_getCreatedUsers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/users/{id}/hierarchy": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get user hierarchy (who created them and who they created) */
        get: operations["UsersController_getUserHierarchy"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/interest-rates/subadmin/{subAdminId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get interest rate configuration for a SUBADMIN */
        get: operations["InterestRatesController_getInterestRates"];
        /** Update interest rate configuration for a SUBADMIN */
        put: operations["InterestRatesController_updateInterestRates"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/interest-rates/my-rates": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get my interest rate configuration (SUBADMIN only) */
        get: operations["InterestRatesController_getMyInterestRates"];
        /** Update my interest rate configuration (SUBADMIN only) */
        put: operations["InterestRatesController_updateMyInterestRates"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/interest-rates/for-manager/{managerId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get interest rates that apply to a specific MANAGER */
        get: operations["InterestRatesController_getInterestRatesForManager"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/external-api/dolar-blue/fetch": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Fetch and persist current Dólar Blue data from external API */
        post: operations["ExternalApiController_fetchDolarBlue"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/external-api/dolar-blue/latest": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get the latest successful Dólar Blue data from database */
        get: operations["ExternalApiController_getLatestDolarBlue"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/external-api/dolar-blue/current-rate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get current exchange rates for calculations */
        get: operations["ExternalApiController_getCurrentExchangeRate"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/external-api/responses": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get all external API responses with pagination */
        get: operations["ExternalApiController_getAllApiResponses"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/external-api/responses/date-range": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get API responses within a date range */
        get: operations["ExternalApiController_getApiResponsesByDateRange"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/external-api/stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get statistics about external API calls */
        get: operations["ExternalApiController_getApiStats"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        LoginDto: {
            /** @example user@example.com */
            email: string;
            /** @example password123 */
            password: string;
        };
        RefreshTokenDto: {
            refreshToken: string;
        };
        CreateUserDto: {
            /** @example user@example.com */
            email: string;
            /** @example password123 */
            password: string;
            /** @example John Doe */
            fullName: string;
            /** @example +1234567890 */
            phone?: string;
            /**
             * @example MANAGER
             * @enum {string}
             */
            role: "SUPERADMIN" | "ADMIN" | "SUBADMIN" | "MANAGER";
        };
        UserResponseDto: {
            id: string;
            email: string;
            fullName: string;
            phone?: Record<string, never> | null;
            /** @enum {string} */
            role: "SUPERADMIN" | "ADMIN" | "SUBADMIN" | "MANAGER";
            dni?: Record<string, never> | null;
            cuit?: Record<string, never> | null;
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            updatedAt: string;
        };
        UpdateUserDto: {
            /** @example user@example.com */
            email?: string;
            /** @example password123 */
            password?: string;
            /** @example John Doe */
            fullName?: string;
            /** @example +1234567890 */
            phone?: string;
            /**
             * @example MANAGER
             * @enum {string}
             */
            role?: "SUPERADMIN" | "ADMIN" | "SUBADMIN" | "MANAGER";
        };
        InterestRateRuleDto: {
            /**
             * @description Days overdue threshold
             * @example 10
             */
            daysOverdue: number;
            /**
             * @description Interest rate percentage
             * @example 15
             */
            interestRate: number;
        };
        UpdateInterestRatesDto: {
            /** @example [
             *       {
             *         "daysOverdue": 10,
             *         "interestRate": 15
             *       },
             *       {
             *         "daysOverdue": 15,
             *         "interestRate": 20
             *       },
             *       {
             *         "daysOverdue": 20,
             *         "interestRate": 25
             *       },
             *       {
             *         "daysOverdue": 26,
             *         "interestRate": 30
             *       },
             *       {
             *         "daysOverdue": 27,
             *         "interestRate": 35
             *       },
             *       {
             *         "daysOverdue": 30,
             *         "interestRate": 41
             *       }
             *     ] */
            rates: components["schemas"]["InterestRateRuleDto"][];
        };
        ExternalApiResponseDto: {
            /**
             * @description Unique identifier
             * @example cuid123
             */
            id: string;
            /**
             * @description Buy price
             * @example 1020.5
             */
            compra: number;
            /**
             * @description Sell price
             * @example 1050.75
             */
            venta: number;
            /**
             * @description Exchange house type
             * @example blue
             */
            casa: string;
            /**
             * @description Currency name
             * @example Dólar Blue
             */
            nombre: string;
            /**
             * @description Currency code
             * @example USD
             */
            moneda: string;
            /**
             * @description Last update from external API
             * @example 2024-01-15T10:30:00.000Z
             */
            fechaActualizacion: string;
            /**
             * @description API URL called
             * @example https://dolarapi.com/v1/dolares/blue
             */
            apiUrl: string;
            /**
             * @description Call status
             * @example SUCCESS
             * @enum {string}
             */
            status: "SUCCESS" | "ERROR" | "TIMEOUT";
            /**
             * @description Response time in milliseconds
             * @example 250
             */
            responseTime?: number;
            /**
             * Format: date-time
             * @description When the record was created in our system
             * @example 2024-01-15T10:35:00.000Z
             */
            createdAt: string;
            /**
             * Format: date-time
             * @description When the record was last updated
             * @example 2024-01-15T10:35:00.000Z
             */
            updatedAt: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    AppController_getHello: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AuthController_login: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginDto"];
            };
        };
        responses: {
            /** @description Login exitoso */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Credenciales incorrectas */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AuthController_refresh: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RefreshTokenDto"];
            };
        };
        responses: {
            /** @description Token actualizado exitosamente */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Token de actualización inválido */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AuthController_logout: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RefreshTokenDto"];
            };
        };
        responses: {
            /** @description Cierre de sesión exitoso */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UsersController_findAll: {
        parameters: {
            query?: {
                page?: number;
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Users retrieved successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UsersController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateUserDto"];
            };
        };
        responses: {
            /** @description User created successfully */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserResponseDto"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UsersController_findOne: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description User retrieved successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserResponseDto"];
                };
            };
            /** @description User not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UsersController_remove: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description User deleted successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description User not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UsersController_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateUserDto"];
            };
        };
        responses: {
            /** @description User updated successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserResponseDto"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description User not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UsersController_getCreatedUsers: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Created users retrieved successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UsersController_getUserHierarchy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description User hierarchy retrieved successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    InterestRatesController_getInterestRates: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description SUBADMIN user ID */
                subAdminId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Interest rates retrieved successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InterestRateRuleDto"][];
                };
            };
        };
    };
    InterestRatesController_updateInterestRates: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description SUBADMIN user ID */
                subAdminId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateInterestRatesDto"];
            };
        };
        responses: {
            /** @description Interest rates updated successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Forbidden - insufficient permissions */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    InterestRatesController_getMyInterestRates: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Your interest rates retrieved successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InterestRateRuleDto"][];
                };
            };
        };
    };
    InterestRatesController_updateMyInterestRates: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateInterestRatesDto"];
            };
        };
        responses: {
            /** @description Your interest rates updated successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    InterestRatesController_getInterestRatesForManager: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description MANAGER user ID */
                managerId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Interest rates for manager retrieved successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InterestRateRuleDto"][];
                };
            };
        };
    };
    ExternalApiController_fetchDolarBlue: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Dólar Blue data fetched and persisted successfully */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ExternalApiResponseDto"];
                };
            };
            /** @description Forbidden - insufficient permissions */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ExternalApiController_getLatestDolarBlue: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Latest Dólar Blue data retrieved successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ExternalApiResponseDto"];
                };
            };
            /** @description No successful data found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ExternalApiController_getCurrentExchangeRate: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Current exchange rates retrieved successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example 1020.5 */
                        compra?: number;
                        /** @example 1050.75 */
                        venta?: number;
                    };
                };
            };
        };
    };
    ExternalApiController_getAllApiResponses: {
        parameters: {
            query?: {
                /** @description Page number (default: 1) */
                page?: number;
                /** @description Items per page (default: 10) */
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description API responses retrieved successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        data?: components["schemas"]["ExternalApiResponseDto"][];
                        meta?: {
                            page?: number;
                            limit?: number;
                            total?: number;
                            totalPages?: number;
                            hasNextPage?: boolean;
                            hasPreviousPage?: boolean;
                        };
                    };
                };
            };
        };
    };
    ExternalApiController_getApiResponsesByDateRange: {
        parameters: {
            query: {
                /** @description Start date (ISO format) */
                startDate: string;
                /** @description End date (ISO format) */
                endDate: string;
                /** @description Page number (default: 1) */
                page?: number;
                /** @description Items per page (default: 10) */
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ExternalApiController_getApiStats: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description API statistics retrieved successfully */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example 150 */
                        totalCalls?: number;
                        /** @example 145 */
                        successfulCalls?: number;
                        /** @example 5 */
                        failedCalls?: number;
                        /** @example 250 */
                        averageResponseTime?: number;
                        /**
                         * Format: date-time
                         * @example 2024-01-15T10:30:00.000Z
                         */
                        lastSuccessfulCall?: string;
                    };
                };
            };
        };
    };
}
